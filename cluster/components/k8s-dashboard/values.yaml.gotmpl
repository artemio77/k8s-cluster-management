metricsScraper:
  enabled: true
metrics-server:
  enabled: true
  args:
  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  - --kubelet-insecure-tls=true
  - --kubelet-use-node-status-port=true
  - --metric-resolution=30s
ingress:
  enabled: true
  hosts:
    - kubernetes-dashboard.{{ .Values.domain }}
  tls:
    - hosts:
        - kubernetes-dashboard.{{ .Values.domain }}
      secretName: dashboard-tls
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-{{ .Values.releaseName }}"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-Email, X-Auth-Request-User, Authorization
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $name_upstream_1 $upstream_cookie_auth;
      proxy_set_header Authorization $upstream_http_authorization;
      access_by_lua_block {
        if ngx.var.name_upstream_1 ~= "" then
          ngx.header["Set-Cookie"] = "auth=" .. ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
        end
      }
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/proxy-body-size: "1024m"
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m"